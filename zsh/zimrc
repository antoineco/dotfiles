################
# ZIM SETTINGS #
################

# Set input mode to 'emacs' (default) or 'vi'.
zstyle ':zim:input' mode 'vi'

# Select what modules you would like enabled. Modules are sourced in the order given.
zstyle ':zim' modules     directory environment git git-info history input utility     async pure kube-ps1 base16-shell     zsh-completions completion     zsh-autosuggestions zsh-syntax-highlighting history-substring-search

# Modules setup configuration.
# See https://github.com/zimfw/zimfw/blob/develop/README.md#module-customization
zstyle ':zim:module' zsh-completions 'url' 'zsh-users/zsh-completions'
zstyle ':zim:module' zsh-autosuggestions 'url' 'zsh-users/zsh-autosuggestions'
zstyle ':zim:module' zsh-syntax-highlighting 'url' 'zsh-users/zsh-syntax-highlighting'
zstyle ':zim:module' async 'url' 'mafredri/zsh-async' 'tag' 'v1.7.2'
zstyle ':zim:module' pure 'url' 'sindresorhus/pure' 'tag' 'v1.10.3'
zstyle ':zim:module' kube-ps1 'url' 'jonmosco/kube-ps1'
zstyle ':zim:module' base16-shell 'url' 'chriskempson/base16-shell'

###################
# MODULE SETTINGS #
###################

#
# completion
#

# Set a custom path for the completion dump file.
# If none is provided, the default ${ZDOTDIR:-${HOME}}/.zcompdump is used.
#zstyle ':zim:completion' dumpfile "${ZDOTDIR:-${HOME}}/.zcompdump-${ZSH_VERSION}"

#
# environment
#

# Set the string below to the desired terminal title format string.
# The terminal title is redrawn upon directory change, however, variables like
# ${PWD} are only evaluated once. Use prompt expansion strings for dynamic data.
# See http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Simple-Prompt-Escapes
# For example, '%n@%m: %1~' corresponds to 'username@host: /current/directory'.
#zstyle ':zim:environment' termtitle '%n@%m: %1~'

#
# history
#

# Save the history in a custom file path.
# If none is provided, the default ${ZDOTDIR:-${HOME}}/.zhistory is used.
#HISTFILE=${ZDOTDIR:-${HOME}}/.zsh_history

#
# input
#

# Enable double-dot expansion.
# This appends '../' to your input for each '.' you type after an initial '..'
#zstyle ':zim:input' double-dot-expand yes

#
# utility
#

# Enable spelling correction prompts.
# See http://zsh.sourceforge.net/Doc/Release/Options.html#index-CORRECT
#setopt CORRECT

# Set a custom spelling correction prompt.
#SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '

#
# zsh-autosuggestions
#

# Customize the style that the suggestions are shown with.
# See https://github.com/zsh-users/zsh-autosuggestions/blob/master/README.md#suggestion-highlight-style
#ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=10'

#
# zsh-syntax-highlighting
#

# Set what highlighters will be used.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Customize the main highlighter styles.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/main.md#how-to-tweak-it
#typeset -A ZSH_HIGHLIGHT_STYLES
#ZSH_HIGHLIGHT_STYLES[comment]='fg=10'

#
# kube-ps1
#

_kube_ps1_cluster_short() {
	# shorten Azure context format
	print ${1/k8s-mstr-[0-9a-z](#c2,)-(#b)([0-9a-z](#c2,)-[a-z][0-9](#c1,2))-kub/${match[1]}}
}
KUBE_PS1_CLUSTER_FUNCTION=_kube_ps1_cluster_short

KUBE_PS1_SEPARATOR=''
KUBE_PS1_PREFIX=''
KUBE_PS1_SUFFIX=''
