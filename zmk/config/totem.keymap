#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            display-name = "Home Row Mod L";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            display-name = "Home Row Mod R";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
            hold-trigger-on-release;
        };
        ltt: layer_tap_thumb {
            compatible = "zmk,behavior-hold-tap";
            display-name = "Layer-Tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_tab {
            timeout-ms = <30>;
            key-positions = <1 2>; // WE
            layers = <0>;
            bindings = <&kp TAB>;
        };

        combo_bspc {
            timeout-ms = <30>;
            key-positions = <22 23>; // XC
            layers = <0>;
            bindings = <&kp BSPC>;
        };
        combo_spc_lower {
            timeout-ms = <30>;
            key-positions = <22 23>;
            layers = <1>;
            bindings = <&kp SPACE>;
        };

        combo_del {
            timeout-ms = <30>;
            key-positions = <28 29>; // ,.
            layers = <0>;
            bindings = <&kp DEL>;
        };
        combo_bspc_upper {
            timeout-ms = <30>;
            key-positions = <28 29>;
            layers = <2>;
            bindings = <&kp BSPC>;
        };

        combo_caps_word {
            timeout-ms = <30>;
            key-positions = <13 16>; // FJ
            layers = <0>;
            bindings = <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            bindings = <
                             &kp Q        &kp W        &kp E        &kp R        &kp T                                    &kp Y        &kp U        &kp I        &kp O        &kp P
                             &hml LCTRL A &hml LALT S  &hml LGUI D  &hml LSHFT F &kp G                                    &kp H        &hmr RSHFT J &hmr RGUI K  &hmr RALT L  &hmr RCTRL SEMI
                &kp ESC      &kp Z        &kp X        &kp C        &kp V        &kp B                                    &kp N        &kp M        &kp COMMA    &kp DOT      &kp FSLH     &kp ENTER
                                                                    &none        &none        &ltt 2 BSPC    &ltt 1 SPACE &none        &none
            >;
        };

        /* Numbers, Navigation
         */
        lower_layer {
            display-name = "Lower";
            bindings = <
                             &kp KP_SLASH &kp KP_N7    &kp KP_N8    &kp KP_N9    &kp KP_ASTERISK                          &kp PRCNT    &kp LBKT     &kp LPAR     &kp RPAR     &kp RBKT
                             &kp KP_MINUS &kp KP_N4    &kp KP_N5    &kp KP_N6    &kp KP_PLUS                              &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &kp COLON
                &kp KP_DOT   &kp KP_N0    &kp KP_N1    &kp KP_N2    &kp KP_N3    &kp KP_EQUAL                             &kp HOME     &kp PG_DN    &kp PG_UP    &kp END      &none        &none
                                                                    &trans       &trans       &ltt 3 BSPC    &none        &trans       &trans
            >;
        };

        /* Symbols
         */
        upper_layer {
            display-name = "Upper";
            bindings = <
                             &kp GRAVE    &kp DOT      &kp UNDER    &kp ASTRK    &kp AT                                   &kp PRCNT    &kp LBKT     &kp LPAR     &kp RPAR     &kp RBKT
                             &kp LT       &kp PIPE     &kp MINUS    &kp GT       &kp FSLH                                 &kp EXCL     &kp COMMA    &kp LBRC     &kp RBRC     &kp SEMI
                &kp TILDE    &kp AMPS     &kp SQT      &kp DQT      &kp PLUS     &kp BSLH                                 &kp HASH     &kp CARET    &kp COLON    &kp EQUAL    &kp DLLR     &kp QMARK
                                                                    &trans       &trans       &none          &ltt 3 SPACE &trans       &trans
            >;
        };

        /* Media, Mouse, Keyboard control
         */
        adjust_layer {
            display-name = "Adjust";
            bindings = <
                             &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none        &bt BT_CLR                               &none        &none        &none        &none        &none
                             &none        &none        &mkp MB2     &mkp MB1     &none                                    &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &none
                &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV   &kp C_PP     &kp C_NEXT                               &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &none &none
                                                                    &none        &none        &none          &none        &none        &none
            >;
        };
    };
};
