#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            display-name = "Home Row Mod L";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            display-name = "Home Row Mod R";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
            hold-trigger-on-release;
        };
        ltt: layer_tap_thumb {
            compatible = "zmk,behavior-hold-tap";
            display-name = "Layer-Tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&mo>, <&kp>;
        };

        bt0: bt_profile_0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Bluetooth Profile 0";
            #binding-cells = <0>;
            bindings = <&macro_bt0>, <&bt BT_DISC 0>;
        };
        bt1: bt_profile_1 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Bluetooth Profile 1";
            #binding-cells = <0>;
            bindings = <&macro_bt1>, <&bt BT_DISC 1>;
        };
        bt2: bt_profile_2 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Bluetooth Profile 2";
            #binding-cells = <0>;
            bindings = <&macro_bt2>, <&bt BT_DISC 2>;
        };

        sqtundr: shift_squote_underscore {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp UNDER>;
            mods = <(MOD_LSFT)>;
        };
        dotcolon: shift_dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT)>;
        };
        mindqt: shift_minus_dquote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp DQT>;
            mods = <(MOD_LSFT)>;
        };
        commsemi: shift_comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        macro_bt0: bt_profile_0_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 0>;
        };

        macro_bt1: bt_profile_1_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 1>;
        };

        macro_bt2: bt_profile_2_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE>, <&bt BT_SEL 2>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_tab {
            timeout-ms = <30>;
            require-prior-idle-ms = <175>;
            key-positions = <1 2>; // LD
            layers = <0>;
            bindings = <&kp TAB>;
        };
        combo_spc_lower {
            timeout-ms = <30>;
            key-positions = <1 2>;
            layers = <1>;
            bindings = <&kp SPACE>;
        };

        combo_del {
            timeout-ms = <30>;
            key-positions = <22 23>; // XM
            layers = <0>;
            bindings = <&kp DEL>;
        };

        combo_bspc_upper {
            timeout-ms = <30>;
            key-positions = <7 8>; // OU
            layers = <2>;
            bindings = <&kp BSPC>;
        };

        combo_caps_word {
            timeout-ms = <30>;
            key-positions = <13 16>; // SH
            layers = <0>;
            bindings = <&caps_word>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /* Base (default), Graphite alphas
         */
        base_layer {
            display-name = "Base";
            bindings = <
                             &kp B        &kp L        &kp D        &kp W        &kp Z                                    &sqtundr     &kp F        &kp O        &kp U        &kp J
                             &hml LCTRL N &hml LALT R  &hml LGUI T  &hml LSHFT S &kp G                                    &kp Y        &hmr RSHFT H &hmr RGUI A  &hmr RALT E  &hmr RCTRL I
                &kp ESC      &kp Q        &kp X        &kp M        &kp C        &kp V                                    &kp K        &kp P        &dotcolon    &mindqt      &commsemi    &kp ENTER
                                                                    &none        &none        &ltt 2 BSPC    &ltt 1 SPACE &none        &none
            >;
        };

        /* Numbers, Navigation
         */
        lower_layer {
            display-name = "Lower";
            bindings = <
                             &kp KP_MINUS &kp N7       &kp N8       &kp N9       &kp KP_PLUS                              &kp PRCNT    &kp LBKT     &kp LPAR     &kp RPAR     &kp RBKT
                             &kp N0       &kp N4       &kp N5       &kp N6       &kp KP_EQUAL                             &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &kp KP_DOT
                &kp COLON    &kp KP_SLASH &kp N1       &kp N2       &kp N3       &kp KP_ASTERISK                          &kp HOME     &kp PG_DN    &kp PG_UP    &kp END      &kp X        &kp B
                                                                    &trans       &trans       &trans         &none        &trans       &trans
            >;
        };

        /* Symbols
         */
        upper_layer {
            display-name = "Upper";
            bindings = <
                             &kp TILDE    &kp DOT      &kp ASTRK    &kp AMPS     &kp AT                                   &kp PRCNT    &kp LBKT     &kp LPAR     &kp RPAR     &kp RBKT
                             &kp LT       &kp PIPE     &kp MINUS    &kp GT       &kp FSLH                                 &kp EXCL     &kp COMMA    &kp LBRC     &kp RBRC     &kp SEMI
                &kp UNDER    &kp GRAVE    &kp SQT      &kp DQT      &kp PLUS     &kp BSLH                                 &kp HASH     &kp CARET    &kp COLON    &kp EQUAL    &kp DLLR     &kp QMARK
                                                                    &trans       &trans       &none          &trans       &trans       &trans
            >;
        };

        /* Media, Mouse, Keyboard control
         */
        adjust_layer {
            display-name = "Adjust";
            bindings = <
                             &bt0         &bt1         &bt2         &out OUT_USB &bt BT_CLR                               &none        &none        &none        &none        &none
                             &none        &none        &mkp MB2     &mkp MB1     &none                                    &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &none
                &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV   &kp C_PP     &kp C_NEXT                               &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &none &none
                                                                    &none        &none        &none          &none        &none        &none
            >;
        };
    };
};
